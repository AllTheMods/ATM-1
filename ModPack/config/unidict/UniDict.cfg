# Configuration file

~CONFIG_VERSION: 1.10.2-2.8

dump {
    # Enable this to keep track of all the entries.
    # the output file will be saved on "config\unidict\dump"  folder.
    # once the file is generated, you must delete it to re-generate. [default: false]
    B:entriesDump=false

    # Enable this to keep track of all the kinds.
    # the output file will be saved on "config\unidict\dump" folder.
    # once the file is generated, you must delete it to re-generate. [default: false]
    B:kindsDump=false

    # Enable this to keep track of all the unificated entries.
    # the output file will be saved on "config\unidict\dump" folder.
    # once the file is generated, you must delete it to re-generate. [default: false]
    B:unifiedEntriesDump=false
}


general {
    # auto hide items in JEI? [default: true]
    B:autoHideInJEI=true
	
    # put here entries that you don't want to hide in JEI.
    # only works if keepOneEntry is false. [default: ]
    S:autoHideInJEIEntryBlackList <
		itemSilicon
     >

    # put here kinds that you don't want to hide in JEI.
    # only works if keepOneEntry is false. [default: [ore]]
    S:autoHideInJEIKindBlackList <
        ore
     >

    # keep only one entry per ore dict entry? [default: false]
    B:keepOneEntry=false

    # mods listed here will be blacklisted in keepOneEntry.
    # must be the exact modID. [default: ]
    S:keepOneEntryModBlackList <
     >

    # Enable this if you have mods that depends on UniDict but you don't like the unification. [default: false]
    B:libraryMode=false

    # If Enabled, the ingredients of all the new recipes created by Crafting Integration will be registered as ItemStacks.
    # Enable this if you don't like the cycling through the possibilities of JEI. [default: false]
    B:registerNewCraftingIngredientsAsItemStacks=false

    # This allows to the user register their own ore entries before the Unification happen.
    # this is mainly useful when the user is trying to unify things that aren't registered previously in the Ore Dictionary.
    # 
    # Format:
    # weirdStone+minecraft:stone#1
    # The example above will register Granite as weirdStone. [default: ]
    S:userRegisteredOreDictEntries <
        rodIron+immersiveengineering:material#1
        rodIron+libvulpes:productrod#1
        rodSteel+immersiveengineering:material#2
        rodSteel+libvulpes:productrod#6
        stickSteel+substratum:rod#11
        stickIron+substratum:rod#0
        pulpWood+thermalfoundation:material#800
        dustWood+pulpWood:woodPulp
		plateIron+railcraft:plate
		plateSteel+railcraft:plate#1
		plateTin+railcraft:plate#2
		plateCopper+railcraft:plate#3
		plateLead+railcraft:plate#4
		plateSilver+railcraft:plate#5
		plateBronze+railcraft:plate#6
		plateGold+railcraft:plate#7
		plateNickel+railcraft:plate#8
     >
}


inputreplacement {
    # Enabling this will remove all non-standard items as input of the Furnace. [default: false]
    B:furnace=false

    # Enabling this will remove all non-standard items as input of IC2 Machine Recipes.
    # Note: this will only affect recipes that doesn't uses OreDictionary. [default: false]
    B:ic2=false

    # Enabling this will remove all non-standard items as input of Mekanism Machine Recipes. [default: false]
    B:mekanism=false
}


modules {
    # Integration Module.
    # if false all the Integrations will be disabled.
    #  [default: true]
    B:integration=true
}


resources {
    # what kind of child do you want to make a standard?
    #  [default: [ore], [dustTiny], [dustSmall], [chunk], [dust], [nugget], [ingot], [block], [plate], [gear], [rod]]
    S:childrenOfMetals <
        ore
        dustTiny
        dustSmall
        chunk
        dust
        nugget
        ingot
        block
        plate
        gear
        rod
		
     >

    # Here you can put a list to custom unify them.
    # must be in this format "ResourceName:kind1|kind2|...". [default: [Obsidian:dustTiny|dust], [Stone:dust], [Obsidian:dust|dustSmall], [Coal:dust|dustSmall], [Sulfur:dust|dustSmall], [Salt:dust]]
    S:customUnifiedResources <
        Obsidian:dustTiny|dust
        Stone:dust|gear
        Obsidian:dust|dustSmall
        Coal:dust|dustSmall
        Sulfur:dust|dustSmall
        Salt:dust
        Charcoal:dust|dustSmall
        Wood:dust
        Silicon:item
		Saltpeter:dust|dustSmall|ore
		Sapphire:gem
		Ruby:gem
		Peridot:gem
		Quartz:dust
		
        
        
     >

    # enabling this allow you to specify the "owner" of each entry.
    # it also will make "S:ownerOfEveryThing" be ignored for this entry. [default: false]
    B:enableSpecificEntrySort=true

    # enabling this allow you to specify the "owner" of each kind.
    # it also will make "S:ownerOfEveryThing" be ignored for this kind. [default: false]
    B:enableSpecificKindSort=true

    # list of things to do unifying things.
    #  [default: [Iron], [Gold], [Copper], [Tin], [Silver], [Lead], [Nickel], [Platinum], [Zinc], [Aluminium], [Aluminum], [Alumina], [Chromium], [Chrome], [Uranium], [Iridium], [Osmium], [Bronze], [Steel], [Brass], [Invar], [Electrum], [Cupronickel], [Constantan]]
    S:metalsToUnify <
        Iron
        Gold
        Copper
        Tin
        Silver
        Lead
        Nickel
        Platinum
        Zinc
        Aluminium
        Aluminum
        Alumina
        Chromium
        Chrome
        Uranium
        Iridium
        Osmium
        Bronze
        Steel
        Brass
        Invar
        Electrum
        Cupronickel
        Constantan
        Enderium
        Signalum
        Lumium
        Magnesium
		Lithium
		
		Sapphire
		Ruby
		Peridot
		Diamond
		Graphite
		
		
     >

    # all the entries will be sorted according to the modID list below
    # must be the exact modID.
    #  [default: [minecraft], [thermalfoundation], [substratum], [ic2], [mekanism], [immersiveengineering], [techreborn]]
    S:ownerOfEveryThing <
        minecraft
        substratum
		nuclearcraft
        ic2
        mekanism
        immersiveengineering
		biomesoplenty
        techreborn
        enderio
        
     >

    # resources to be black-listed.
    # this exists to avoid duplicates.
    # this affect the API. [default: [Aluminum], [Alumina], [Chrome], [Constantan]]
    S:resourceBlackList <
        Alumina
        Chrome
        Constantan
     >
}


